<snippet>
	<content><![CDATA[

template <typename T>
class DSU{
  int n;
  vector<T> parent , rank;
public:
	DSU(int _n) : n (_n) {
	  parent.resize(n);
	  rank.resize(n , 1);
		iota(parent.begin() , parent.end() , 0);
	}
	T find(T x){
		if(parent[x] == x) return x;
		return parent[x] = find(parent[x]);
	}
	void unionr(T u , T v){
		T x = find(u);
		T y = find(v);
		if(rank[x] == rank[y]){
			parent[y] = x;
			rank[x]++;
		}else if(rank[x] < rank[y]){
			parent[x] = y;
		}else{
			parent[y] = x;
		}
	}
};

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>union</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.cpp , source.c++ , source.c</scope>
	<description>My Template for Union By rank and path compression</description>
</snippet>
